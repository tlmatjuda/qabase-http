<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.toob</groupId>
	<artifactId>qabase-http</artifactId>
	<version>0.0.1</version>
	<name>QABase - HTTP - Automation</name>
	<description>HTTP Rest Test Automation Template</description>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<java.version>21</java.version>
		<kotlin.version>2.1.0</kotlin.version>
		<spring-boot.version>3.4.2</spring-boot.version>

		<rest-assured.version>5.5.0</rest-assured.version>
		<kotlinx-serialization-json.version>1.8.0</kotlinx-serialization-json.version>
		<allure.version>2.29.0</allure.version>
		<aspectj.version>1.9.22.1</aspectj.version>

		<apache-commons-lang.version>3.17.0</apache-commons-lang.version>
		<apache-commons-collection.version>4.5.0-M2</apache-commons-collection.version>
		<apache-commons-text.version>1.12.0</apache-commons-text.version>

		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>3.2.2</maven-surefire-plugin.version>
		<maven-ant-run.version>3.1.0</maven-ant-run.version>
		<allure-maven.version>2.15.2</allure-maven.version>
	</properties>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- APACHE COMMONS UTILS -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${apache-commons-lang.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${apache-commons-collection.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>${apache-commons-text.version}</version>
		</dependency>


		<!-- TESTING GOODIES INCL SPRING, SELENIDE, JUNIT 5 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-test-junit5</artifactId>
		</dependency>

		<!-- Allure -->
		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-junit5</artifactId>
			<version>${allure.version}</version>
		</dependency>

		<!-- REST Assured -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest-assured.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-serialization-json-jvm</artifactId>
			<version>${kotlinx-serialization-json.version}</version>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/kotlin</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
			</plugin>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<version>${kotlin.version}</version>
				<executions>
					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<jvmTarget>${java.version}</jvmTarget>
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>test-compile</goal>
						</goals>
						<configuration>
							<jvmTarget>${java.version}</jvmTarget>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<args>
						<arg>-Xjsr305=strict</arg>
					</args>
					<compilerPlugins>
						<plugin>spring</plugin>
						<plugin>kotlinx-serialization</plugin>
					</compilerPlugins>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
					<!-- Add this dependency for serialization -->
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-serialization</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Maven Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version> <!-- Ensure a recent version -->
				<configuration>
					<source>${java.version}</source> <!-- Adjust to your Java version -->
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-configuration-processor</artifactId>
							<version>${spring-boot.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- Maven Surefire Plugin with Allure -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<argLine>
						-javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
					</argLine>
					<systemProperties>
						<property>
							<name>allure.results.directory</name>
							<value>${project.build.directory}/allure-results</value>
						</property>
					</systemProperties>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjweaver</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Allure Maven Plugin -->
			<plugin>
				<groupId>io.qameta.allure</groupId>
				<artifactId>allure-maven</artifactId>
				<version>${allure-maven.version}</version>
				<configuration>
					<reportVersion>${allure.version}</reportVersion>
					<resultsDirectory>${project.build.directory}/allure-results</resultsDirectory>
					<reportDirectory>${project.build.directory}/allure-reports</reportDirectory>
				</configuration>
			</plugin>

			<!-- Add this plugin to create directories -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-ant-run.version}</version>
				<executions>
					<execution>
						<id>create-allure-results-directory</id>
						<phase>initialize</phase>
						<configuration>
							<target>
								<mkdir dir="${project.build.directory}/allure-results"/>
								<mkdir dir="${project.build.directory}/allure-reports"/>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
